// <auto-generated />
using System;
using CheengizsStore.DatabaseContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CheengizsStore.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20250529025335_NEWSTRUCTURE")]
    partial class NEWSTRUCTURE
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CheengizsStore.Controllers.SneakerPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("SneakerColorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SneakerColorId");

                    b.ToTable("SneakerPhotos");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("SneakerProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("SneakerProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Models");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<string>("OrderDisclaimer")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("SneakerColorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("SneakerColorId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SneakerId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("SneakerId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Price")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)");

                    b.Property<int>("SneakerProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("SneakerProductId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("RusSize")
                        .HasPrecision(3, 1)
                        .HasColumnType("numeric(3,1)");

                    b.Property<decimal>("UkSize")
                        .HasPrecision(3, 1)
                        .HasColumnType("numeric(3,1)");

                    b.Property<decimal>("UsSize")
                        .HasPrecision(3, 1)
                        .HasColumnType("numeric(3,1)");

                    b.HasKey("Id");

                    b.HasIndex("UkSize", "RusSize", "UsSize")
                        .IsUnique();

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Sneaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("ModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("SneakerTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ModelId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SneakerTypeId");

                    b.ToTable("Sneakers");
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Coloration")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)");

                    b.Property<int>("SneakerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SneakerId");

                    b.ToTable("SneakerColors");
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("SizeId")
                        .HasColumnType("integer");

                    b.Property<int>("SneakerColorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SizeId");

                    b.HasIndex("SneakerColorId");

                    b.ToTable("SneakerProducts");
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SneakerTypes");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("SneakerProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SneakerProductId")
                        .IsUnique();

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("ColorSneakerColor", b =>
                {
                    b.Property<int>("ColorsId")
                        .HasColumnType("integer");

                    b.Property<int>("SneakerColorsId")
                        .HasColumnType("integer");

                    b.HasKey("ColorsId", "SneakerColorsId");

                    b.HasIndex("SneakerColorsId");

                    b.ToTable("ColorSneakerColor");
                });

            modelBuilder.Entity("MaterialSneaker", b =>
                {
                    b.Property<int>("MaterialsId")
                        .HasColumnType("integer");

                    b.Property<int>("SneakersId")
                        .HasColumnType("integer");

                    b.HasKey("MaterialsId", "SneakersId");

                    b.HasIndex("SneakersId");

                    b.ToTable("SneakerMaterial", (string)null);
                });

            modelBuilder.Entity("CheengizsStore.Controllers.SneakerPhoto", b =>
                {
                    b.HasOne("CheengizsStore.Entities.SneakerColor", "SneakerColor")
                        .WithMany("SneakerPhotos")
                        .HasForeignKey("SneakerColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SneakerColor");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Cart", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Account", "Account")
                        .WithMany("Carts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.SneakerProduct", "SneakerProduct")
                        .WithMany("Carts")
                        .HasForeignKey("SneakerProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("SneakerProduct");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Model", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Order", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.SneakerColor", "SneakerColor")
                        .WithMany("Orders")
                        .HasForeignKey("SneakerColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("SneakerColor");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Review", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Account", "Account")
                        .WithMany("Reviews")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.Sneaker", "Sneaker")
                        .WithMany("Reviews")
                        .HasForeignKey("SneakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Sneaker");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Sale", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Account", "Account")
                        .WithMany("Sales")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.SneakerProduct", "SneakerProduct")
                        .WithMany("Sales")
                        .HasForeignKey("SneakerProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("SneakerProduct");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Sneaker", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Country", "Country")
                        .WithMany("Sneakers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.Model", "Model")
                        .WithMany("Sneakers")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.SneakerType", "SneakerType")
                        .WithMany("Sneakers")
                        .HasForeignKey("SneakerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Model");

                    b.Navigation("SneakerType");
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerColor", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Sneaker", "Sneaker")
                        .WithMany("SneakerColors")
                        .HasForeignKey("SneakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sneaker");
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerProduct", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Size", "Size")
                        .WithMany("SneakerProducts")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.SneakerColor", "SneakerColor")
                        .WithMany("SneakerProducts")
                        .HasForeignKey("SneakerColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");

                    b.Navigation("SneakerColor");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Stock", b =>
                {
                    b.HasOne("CheengizsStore.Entities.SneakerProduct", "SneakerProduct")
                        .WithOne("Stock")
                        .HasForeignKey("CheengizsStore.Entities.Stock", "SneakerProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SneakerProduct");
                });

            modelBuilder.Entity("ColorSneakerColor", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Color", null)
                        .WithMany()
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.SneakerColor", null)
                        .WithMany()
                        .HasForeignKey("SneakerColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaterialSneaker", b =>
                {
                    b.HasOne("CheengizsStore.Entities.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheengizsStore.Entities.Sneaker", null)
                        .WithMany()
                        .HasForeignKey("SneakersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CheengizsStore.Entities.Account", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Country", b =>
                {
                    b.Navigation("Sneakers");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Model", b =>
                {
                    b.Navigation("Sneakers");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Size", b =>
                {
                    b.Navigation("SneakerProducts");
                });

            modelBuilder.Entity("CheengizsStore.Entities.Sneaker", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("SneakerColors");
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerColor", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SneakerPhotos");

                    b.Navigation("SneakerProducts");
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerProduct", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Sales");

                    b.Navigation("Stock")
                        .IsRequired();
                });

            modelBuilder.Entity("CheengizsStore.Entities.SneakerType", b =>
                {
                    b.Navigation("Sneakers");
                });
#pragma warning restore 612, 618
        }
    }
}
